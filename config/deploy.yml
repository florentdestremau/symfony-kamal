# Name of your application. Used to uniquely configure containers.
service: symfony-kamal

# Name of the container image.
image: florentcc/symfony-kamal

# Deploy to these servers.
servers:
  web:
    - 174.138.3.138
#  job:
#    hosts:
#      - 174.138.3.138
#    cmd: php bin/console messenger:consume async --time-limit=3600 --memory-limit=128M -vv


# Note: If using Cloudflare, set encryption mode in SSL/TLS setting to "Full" to enable CF-to-app encryption.
proxy:
  ssl: true
  host: symfony-kamal.florent.cc
  forward_headers: true
  # Proxy connects to your container on port 80 by default.
  # app_port: 3000

# Credentials for your image host.
registry:
  server: localhost:5555

builder:
  arch: amd64

env:
  clear: { }
  secret:
    - DATABASE_URL
    - APP_SECRET

aliases:
  shell: app exec --interactive --reuse "bash"

# Use a different ssh user than root
#
# ssh:
#   user: app

# Use a persistent storage volume.
#
#volumes:
#   - "app_storage:/app/storage"

# Bridge fingerprinted assets, like JS and CSS, between versions to avoid
# hitting 404 on in-flight requests. Combines all files from new and old
# version inside the asset_path.
#
asset_path: /app/public/assets

# Configure rolling deploys by setting a wait time between batches of restarts.
#
# boot:
#   limit: 10 # Can also specify as a percentage of total hosts, such as "25%"
#   wait: 2

# Use accessory services (secrets come from .kamal/secrets).
accessories:
  database:
    image: postgres:17-alpine
    host: 174.138.3.138
    port: 5432
    env:
      clear: { }
      secret:
        - POSTGRES_DB
        - POSTGRES_PASSWORD
        - POSTGRES_USER
    directories:
      - /var/lib/symfony-kamal-database-data:/var/lib/postgresql/data:rw

# accessories:
#   db:
#     image: mysql:8.0
#     host: 192.168.0.2
#     port: 3306
#     env:
#       clear:
#         MYSQL_ROOT_HOST: '%'
#       secret:
#         - MYSQL_ROOT_PASSWORD
#     files:
#       - config/mysql/production.cnf:/etc/mysql/my.cnf
#       - db/production.sql:/docker-entrypoint-initdb.d/setup.sql
#     directories:
#       - data:/var/lib/mysql
#   redis:
#     image: valkey/valkey:8
#     host: 192.168.0.2
#     port: 6379
#     directories:
#       - data:/data
